{"version":3,"sources":["webpack:///./src/contexts/ImageDataContext.js","webpack:///./src/layouts/SEO.js","webpack:///./src/constants/COLORS.js","webpack:///./src/layouts/GlobalStyles.js","webpack:///./src/components/FreeCellCanvas/cells/EmptyCell.js","webpack:///./src/components/FreeCellCanvas/Image.js","webpack:///./src/components/FreeCellCanvas/cells/Card.js","webpack:///./src/components/FreeCellCanvas/decks/FreeDeck.js","webpack:///./src/components/FreeCellCanvas/cells/EmptyWaterMarkCell.js","webpack:///./src/components/FreeCellCanvas/decks/SolvedDeck.js","webpack:///./src/components/FreeCellCanvas/decks/StackedDeck.js","webpack:///./src/components/FreeCellCanvas/PuzzleBoard.js","webpack:///./src/components/FreeCellCanvas/index.js","webpack:///./src/components/FreeCellBoard.js","webpack:///./src/pages/index.js"],"names":["React","createContext","Provider","Consumer","ImageDataProvider","render","react_default","a","createElement","value","_this","props","imageData","children","PureComponent","SEO","_ref","description","lang","meta","title","site","_2417117884","data","metaDescription","siteMetadata","Helmet_default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","COLORS","GREY","RED","YELLOW","BLACK","BLUE","Global","createGlobalStyle","_templateObject","GlobalStyles","Fragment","dist","EmptyCell","ReactKonvaCore","x","y","width","height","cornerRadius","fill","stroke","strokeWidth","opacity","CanvasImage","state","image","loadPlaceholder","handleLoad","setState","handleMoveOver","document","body","style","cursor","handleMoveOut","handleDragStart","e","target","setAttrs","shadowBlur","shadowOpacity","shadowOffset","scaleX","scaleY","handleDragEnd","to","duration","easing","Konva","Easings","ElasticEaseOut","shadowOffsetX","shadowOffsetY","_this$props","draggable","Object","assign","ref","node","imageNode","onMouseOver","onMouseOut","onDragStart","onDragEnd","componentDidMount","this","loadImage","componentDidUpdate","oldProps","_this2","src","srcSet","base64","placeholder","componentWillUnmount","removeEventListener","window","Image","addEventListener","Card","_this$props$imageData","childImageSharp","fixed","FreeCellCanvas_Image","cells_Card","Card_Card","id","FreeDeck","renderCell","i","card","cells_EmptyCell","key","EmptyWaterMarkCell","_this$props$waterMark","waterMarkData","cells_EmptyWaterMarkCell","EmptyWaterMarkCell_EmptyWaterMarkCell","category","SolvedDeck","renderSolvedSpadeDeck","renderDeck","renderSolvedHeartDeck","renderSolvedDiamondDeck","renderSolvedClubDeck","solvedCards","topCard","length","spadeSolvedCards","heartSolvedCards","diamondSolvedCards","clubSolvedCards","StackedDeck","isDraggable","cards","renderCards","map","PuzzleBoard","renderStackedDecks","deckOfCards","decks_StackedDeck","FreeCellCanvas","getCanvasWidth","getCanvasHeight","ImageDataContext_ImageDataProvider","decks_FreeDeck","decks_SolvedDeck","FreeCellCanvas_PuzzleBoard","FreeCellBoard","components_FreeCellCanvas","__webpack_require__","d","__webpack_exports__","query","layouts_SEO","layouts_GlobalStyles","components_FreeCellBoard"],"mappings":"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","file":"component---src-pages-index-js-e933b56893e98ec6bc65.js","sourcesContent":["import React from \"react\"\n\nconst defaultContextValue = {}\n\nconst { Provider, Consumer } = React.createContext(defaultContextValue)\n\nclass ImageDataProvider extends React.PureComponent {\n  render = () => (\n    <Provider value={this.props.imageData}>\n      {this.props.children}\n    </Provider>\n  )\n}\n\nexport { Consumer as default, ImageDataProvider }\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `zh-TW`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","const COLORS = {\n  GREY: \"#dbd3ca\",\n  RED: \"#a93d2d\",\n  YELLOW: \"#c99d31\",\n  BLACK: \"#4d4d4d\",\n  BLUE: \"#6ca39f\",\n}\n\nexport default COLORS\n","import React from \"react\"\nimport { Normalize } from 'styled-normalize'\nimport { createGlobalStyle } from 'styled-components'\n\nimport COLORS from \"../constants/COLORS\"\n\nconst Global = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=DM+Serif+Text&display=swap');\n  body {\n    font-family: 'DM Serif Text', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Open Sans', 'Helvetica Neue', sans-serif;\n    background-color: ${COLORS.GREY};\n  }\n`\n\nclass GlobalStyles extends React.PureComponent {\n  render = () => (\n    <>\n      <Normalize />\n      <Global />\n    </>\n  )\n}\n\nexport default GlobalStyles\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { Rect } from 'react-konva/lib/ReactKonvaCore'\nimport \"konva/lib/shapes/Rect\"\n\nimport COLORS from \"../../../constants/COLORS\"\n\n\nclass EmptyCell extends React.PureComponent {\n  static propTypes = {\n    x: PropTypes.number,\n    y: PropTypes.number\n  }\n\n  static defaultProps = {\n    x: 0,\n    y: 0\n  }\n\n  render = () => (\n    <Rect\n      x={this.props.x}\n      y={this.props.y}\n      width={100}\n      height={150}\n      cornerRadius={5}\n      fill=\"transparent\"\n      stroke={COLORS.BLACK}\n      strokeWidth={1}\n      opacity={0.2}\n    />\n  )\n}\n\nexport default EmptyCell\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Konva from \"konva\"\n\nimport { Image } from 'react-konva/lib/ReactKonvaCore'\nimport \"konva/lib/shapes/Image\"\n\nclass CanvasImage extends React.PureComponent {\n  static propTypes = {\n    x: PropTypes.number,\n    y: PropTypes.number,\n    base64: PropTypes.string,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    src: PropTypes.string,\n    srcSet: PropTypes.string,\n    draggable: PropTypes.bool.isRequired\n  }\n\n  static defaultProps = {\n    x: 0,\n    y: 0,\n    draggable: false\n  }\n\n  state = {\n    image: this.loadPlaceholder()\n  }\n\n  componentDidMount() {\n    this.loadImage()\n  }\n\n  componentDidUpdate(oldProps) {\n    if (\n      oldProps.src !== this.props.src &&\n      oldProps.srcSet !== this.props.srcSet\n    ) {\n      this.loadImage()\n\n      if (this.props.base64) {\n        this.setState(() => ({\n          placeholder: this.loadPlaceholder()\n        }))\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.image.removeEventListener('load', this.handleLoad)\n  }\n\n  loadPlaceholder() {\n    if (!this.props.base64) {\n      return null\n    }\n\n    const placeholder = new window.Image()\n    placeholder.src = this.props.base64\n    return placeholder\n  }\n\n  loadImage() {\n    this.image = new window.Image()\n    this.image.src = this.props.src\n    this.image.srcSet = this.props.srcSet // [NOTE] not working, maybe canvas image not support srcSet?\n    this.image.addEventListener('load', this.handleLoad)\n  }\n\n  handleLoad = () => {\n    this.setState({\n      image: this.image\n    })\n  }\n\n  handleMoveOver = () => {\n    document.body.style.cursor = 'pointer'\n  }\n\n  handleMoveOut = () => {\n    document.body.style.cursor = 'default'\n  }\n\n  handleDragStart = (e) => {\n    e.target.setAttrs({\n      shadowBlur: 10,\n      shadowOpacity: .6,\n      shadowOffset: {\n        x: 2,\n        y: 2\n      },\n      scaleX: 1.05,\n      scaleY: 1.05\n    })\n  }\n\n  handleDragEnd = (e) => {\n    e.target.to({\n      duration: 0.5,\n      easing: Konva.Easings.ElasticEaseOut,\n      scaleX: 1,\n      scaleY: 1,\n      shadowOffsetX: 0,\n      shadowOffsetY: 0,\n      shadowBlur: 0\n    })\n  }\n\n  render = () => {\n    const { x, y, width, height, draggable } = this.props\n\n    return (\n      <Image\n        x={x}\n        y={y}\n        width={width}\n        height={height}\n        image={this.state.image}\n        draggable={draggable}\n        ref={node => {\n          this.imageNode = node\n        }}\n        {...(draggable && {\n          onMouseOver: this.handleMoveOver,\n          onMouseOut: this.handleMoveOut,\n          onDragStart: this.handleDragStart,\n          onDragEnd: this.handleDragEnd\n        })}\n      />\n    )\n  }\n}\n\nexport default CanvasImage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport ImageDataConsumer from \"../../../contexts/ImageDataContext\"\nimport Image from \"../Image\"\n\nclass Card extends React.PureComponent {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    x: PropTypes.number,\n    y: PropTypes.number,\n    draggable: PropTypes.bool\n  }\n\n  static defaultProps = {\n    x: 0,\n    y: 0,\n    draggable: false\n  }\n\n  render = () => {\n    const { x, y, draggable } = this.props\n    const { base64, width, height, src, srcSet } = this.props.imageData.childImageSharp.fixed\n    \n    return (\n      <Image\n        x={x}\n        y={y}\n        base64={base64}\n        width={width / 2} // [NOTE] hotfix, for retina resolution support\n        height={height / 2}\n        src={src}\n        srcSet={srcSet}\n        draggable={draggable}\n      />\n    )\n  }\n}\n\nexport default (props) => (\n  <ImageDataConsumer>\n    {(imageData) => <Card imageData={imageData[props.id]} {...props} />}\n  </ImageDataConsumer>\n)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Group } from 'react-konva/lib/ReactKonvaCore'\n\nimport EmptyCell from \"../cells/EmptyCell\"\nimport Card from \"../cells/Card\"\n\nclass FreeDeck extends React.PureComponent {\n  static propTypes = {\n    pos0Card: PropTypes.object,\n    pos1Card: PropTypes.object,\n    pos2Card: PropTypes.object,\n    pos3Card: PropTypes.object\n  }\n\n  renderCell = (i) => {\n    const card = this.props[`pos${i}Card`]\n\n    return (\n      <Group x={(100 + 16) * i} y={0}>\n        <EmptyCell />\n        {card && <Card key={card.id} imageData={card.imageData} />}\n      </Group>\n    )\n  }\n\n  render = () => {\n\n    return (\n      <Group x={139} y={51}>\n        {this.renderCell(0)}\n        {this.renderCell(1)}\n        {this.renderCell(2)}\n        {this.renderCell(3)}\n      </Group>\n    )\n  }\n}\n\nexport default FreeDeck","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Group } from 'react-konva/lib/ReactKonvaCore'\n\nimport ImageDataConsumer from \"../../../contexts/ImageDataContext\"\n\nimport EmptyCell from './EmptyCell'\nimport Image from '../Image'\n\nclass EmptyWaterMarkCell extends React.PureComponent {\n  static propTypes = {\n    x: PropTypes.number,\n    y: PropTypes.number,\n    category: PropTypes.string.isRequired,\n    waterMarkData: PropTypes.object\n  }\n\n  static defaultProps = {\n    x: 0,\n    y: 0\n  }\n\n  render = () => {\n    const { base64, width, height, src, srcSet } = this.props.waterMarkData.childImageSharp.fixed\n\n    return (\n      <Group x={this.props.x} y={this.props.y}>\n        <EmptyCell />\n        <Image\n          x={20}\n          y={45}\n          base64={base64}\n          width={width / 2} // [NOTE] hotfix, for retina resolution support\n          height={height / 2}\n          src={src}\n          srcSet={srcSet}\n        />\n      </Group>\n    )\n  }\n}\n\n\nexport default (props) => (\n  <ImageDataConsumer>\n    {(imageData) => <EmptyWaterMarkCell waterMarkData={imageData[`${props.category}_watermark`]} {...props} />}\n  </ImageDataConsumer>\n)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Group } from 'react-konva/lib/ReactKonvaCore'\n\nimport EmptyWaterMarkCell from \"../cells/EmptyWaterMarkCell\"\nimport Card from \"../cells/Card\"\n\nclass SolvedDeck extends React.PureComponent {\n  static propTypes = {\n    spadeSolvedCards: PropTypes.array,\n    heartSolvedCards: PropTypes.array,\n    diamondSolvedCards: PropTypes.array,\n    clubSolvedCards: PropTypes.array\n  }\n\n  static defaultProps = {\n    spadeSolvedCards: [],\n    heartSolvedCards: [],\n    diamondSolvedCards: [],\n    clubSolvedCards: []\n  }\n\n  renderSolvedSpadeDeck = () => this.renderDeck(0, \"spade\")\n  renderSolvedHeartDeck = () => this.renderDeck(1, \"heart\")\n  renderSolvedDiamondDeck = () => this.renderDeck(2, \"diamond\")\n  renderSolvedClubDeck = () => this.renderDeck(3, \"club\")\n\n  renderDeck = (i, category) => {\n    const solvedCards = this.props[`${category}SolvedCards`]\n    const topCard = solvedCards.length > 0 ? solvedCards[solvedCards.length - 1] : null\n    \n    return (\n      <Group x={(100 + 16) * i} y={0}>\n        <EmptyWaterMarkCell category={category} />\n        {topCard && <Card key={topCard.id} imageData={topCard.imageData} />}\n      </Group>\n    )\n  }\n\n  render = () => {\n    return (\n      <Group x={687} y={51}>\n        {this.renderSolvedSpadeDeck()}\n        {this.renderSolvedHeartDeck()}\n        {this.renderSolvedDiamondDeck()}\n        {this.renderSolvedClubDeck()}\n      </Group>\n    )\n  }\n}\n\nexport default SolvedDeck\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Group } from 'react-konva/lib/ReactKonvaCore'\n\nimport Card from \"../cells/Card\"\n\nclass StackedDeck extends React.PureComponent {\n  static propTypes = {\n    x: PropTypes.number,\n    y: PropTypes.number,\n    cards: PropTypes.array\n  }\n\n  static defaultProps = {\n    x: 0,\n    y: 0,\n    cards: []\n  }\n\n  isDraggable = (i) => {\n    return i === this.props.cards.length - 1\n  }\n\n  renderCards = () => this.props.cards.map((card, i) => (\n    <Card id={card.id} key={card.id} x={0} y={32 * i} draggable={this.isDraggable(i)} />\n  ))\n\n  render = () => {\n    const { x, y } = this.props\n\n    return (\n      <Group x={x} y={y}>\n        {this.renderCards()}\n      </Group>\n    )\n  }\n}\n\nexport default StackedDeck\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Group } from 'react-konva/lib/ReactKonvaCore'\n\nimport StackedDeck from \"./decks/StackedDeck\"\n\nclass PuzzleBoard extends React.PureComponent {\n  static propTypes = {\n    x: PropTypes.number,\n    y: PropTypes.number,\n    deckOfCards: PropTypes.array\n  }\n\n  static defaultProps = {\n    x: 179,\n    y: 234,\n    deckOfCards: []\n  }\n\n  renderStackedDecks = () => this.props.deckOfCards.map((cards, i) => (\n    <StackedDeck key={i} cards={cards} x={(100 + 16) * i} y={0} />\n  ))\n\n  render = () => {\n    const { x, y } = this.props\n\n    return (\n      <Group x={x} y={y}>\n        {this.renderStackedDecks()}\n      </Group>\n    )\n  }\n}\n\nexport default PuzzleBoard\n","import React from 'react'\nimport { Stage, Layer } from 'react-konva/lib/ReactKonvaCore'\n\nimport ImageDataConsumer, { ImageDataProvider } from '../../contexts/ImageDataContext'\n\nimport FreeDeck from './decks/FreeDeck'\nimport SolvedDeck from './decks/SolvedDeck'\nimport PuzzleBoard from './PuzzleBoard'\n\nclass FreeCellCanvas extends React.PureComponent {\n\n  getCanvasWidth = () => 1440 // [TODO] Support SSR and responsive simultaneously\n\n  getCanvasHeight = () => 821 // [TODO] Support SSR and responsive simultaneously\n\n  render = () => (\n    <ImageDataConsumer>\n      {imageData => (\n        <Stage width={this.getCanvasWidth()} height={this.getCanvasHeight()}>\n          <ImageDataProvider imageData={imageData}>\n            <Layer>\n              <FreeDeck />\n              <SolvedDeck />\n\n              <PuzzleBoard\n                deckOfCards={[\n                  [{ id: 'heart_k' }, { id: 'club_2' }, { id: 'diamond_10' }, { id: 'heart_3' }, { id: 'heart_6' }, { id: 'spade_a' }, { id: 'spade_10' }],\n                  [{ id: 'diamond_2' }, { id: 'spade_7' }, { id: 'diamond_6' }, { id: 'spade_5' }, { id: 'club_10' }, { id: 'diamond_k' }, { id: 'heart_8' }],\n                  [{ id: 'spade_9' }, { id: 'heart_4' }, { id: 'club_q' }, { id: 'spade_4' }, { id: 'club_7' }, { id: 'spade_2' }, { id: 'club_9' }],\n                  [{ id: 'heart_a' }, { id: 'spade_8' }, { id: 'diamond_4' }, { id: 'heart_j' }, { id: 'heart_q' }, { id: 'diamond_9' }, { id: 'spade_q' }],\n                  [{ id: 'club_8' }, { id: 'diamond_q' }, { id: 'heart_9' }, { id: 'club_k' }, { id: 'spade_k' }, { id: 'diamond_a' }],\n                  [{ id: 'heart_10' }, { id: 'club_a' }, { id: 'diamond_7' }, { id: 'heart_2' }, { id: 'club_j' }, { id: 'spade_6' }],\n                  [{ id: 'club_6' }, { id: 'diamond_3' }, { id: 'heart_5' }, { id: 'diamond_j' }, { id: 'diamond_5' }, { id: 'heart_7' }],\n                  [{ id: 'spade_3' }, { id: 'diamond_8' }, { id: 'club_5' }, { id: 'club_3' }, { id: 'spade_j' }, { id: 'club_4' }],\n                ]}\n              />\n            </Layer>\n          </ImageDataProvider>\n        </Stage>\n      )}\n    </ImageDataConsumer>\n  )\n}\n\nexport default FreeCellCanvas\n","import React from \"react\"\nimport FreeCellCanvas from \"./FreeCellCanvas\"\n\nclass FreeCellBoard extends React.PureComponent {\n  render = () => {\n\n    return (\n      <FreeCellCanvas />\n    )\n  }\n}\n\nexport default FreeCellBoard\n","import React from \"react\"\n\nimport { ImageDataProvider } from '../contexts/ImageDataContext'\n\nimport SEO from \"../layouts/SEO\"\nimport GlobalStyles from \"../layouts/GlobalStyles\"\nimport FreeCellBoard from \"../components/FreeCellBoard\"\n\nexport default ({ data }) => (\n  <ImageDataProvider imageData={data}>\n    <SEO title=\"Retro Free Cell\" />\n    <GlobalStyles />\n\n    <FreeCellBoard />\n  </ImageDataProvider>\n)\n\nexport const query = graphql`\n  query {\n    club_a: file(relativePath: { eq: \"cards/club_a.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    club_2: file(relativePath: { eq: \"cards/club_2.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    club_3: file(relativePath: { eq: \"cards/club_3.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    club_4: file(relativePath: { eq: \"cards/club_4.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    club_5: file(relativePath: { eq: \"cards/club_5.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    club_6: file(relativePath: { eq: \"cards/club_6.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    club_7: file(relativePath: { eq: \"cards/club_7.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    club_8: file(relativePath: { eq: \"cards/club_8.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    club_9: file(relativePath: { eq: \"cards/club_9.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    club_10: file(relativePath: { eq: \"cards/club_10.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    club_j: file(relativePath: { eq: \"cards/club_j.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    club_q: file(relativePath: { eq: \"cards/club_q.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    club_k: file(relativePath: { eq: \"cards/club_k.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    diamond_a: file(relativePath: { eq: \"cards/diamond_a.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    diamond_2: file(relativePath: { eq: \"cards/diamond_2.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    diamond_3: file(relativePath: { eq: \"cards/diamond_3.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    diamond_4: file(relativePath: { eq: \"cards/diamond_4.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    diamond_5: file(relativePath: { eq: \"cards/diamond_5.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    diamond_6: file(relativePath: { eq: \"cards/diamond_6.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    diamond_7: file(relativePath: { eq: \"cards/diamond_7.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    diamond_8: file(relativePath: { eq: \"cards/diamond_8.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    diamond_9: file(relativePath: { eq: \"cards/diamond_9.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    diamond_10: file(relativePath: { eq: \"cards/diamond_10.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    diamond_j: file(relativePath: { eq: \"cards/diamond_j.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    diamond_q: file(relativePath: { eq: \"cards/diamond_q.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    diamond_k: file(relativePath: { eq: \"cards/diamond_k.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    heart_a: file(relativePath: { eq: \"cards/heart_a.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    heart_2: file(relativePath: { eq: \"cards/heart_2.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    heart_3: file(relativePath: { eq: \"cards/heart_3.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    heart_4: file(relativePath: { eq: \"cards/heart_4.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    heart_5: file(relativePath: { eq: \"cards/heart_5.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    heart_6: file(relativePath: { eq: \"cards/heart_6.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    heart_7: file(relativePath: { eq: \"cards/heart_7.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    heart_8: file(relativePath: { eq: \"cards/heart_8.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    heart_9: file(relativePath: { eq: \"cards/heart_9.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    heart_10: file(relativePath: { eq: \"cards/heart_10.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    heart_j: file(relativePath: { eq: \"cards/heart_j.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    heart_q: file(relativePath: { eq: \"cards/heart_q.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    heart_k: file(relativePath: { eq: \"cards/heart_k.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    spade_a: file(relativePath: { eq: \"cards/spade_a.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    spade_2: file(relativePath: { eq: \"cards/spade_2.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    spade_3: file(relativePath: { eq: \"cards/spade_3.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    spade_4: file(relativePath: { eq: \"cards/spade_4.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    spade_5: file(relativePath: { eq: \"cards/spade_5.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    spade_6: file(relativePath: { eq: \"cards/spade_6.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    spade_7: file(relativePath: { eq: \"cards/spade_7.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    spade_8: file(relativePath: { eq: \"cards/spade_8.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    spade_9: file(relativePath: { eq: \"cards/spade_9.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    spade_10: file(relativePath: { eq: \"cards/spade_10.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    spade_j: file(relativePath: { eq: \"cards/spade_j.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    spade_q: file(relativePath: { eq: \"cards/spade_q.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    spade_k: file(relativePath: { eq: \"cards/spade_k.png\" }) {\n      childImageSharp { fixed(width: 200) { ...GatsbyImageSharpFixed } }\n    }\n    club_watermark: file(relativePath: { eq: \"img_watermark_club.png\" }) {\n      childImageSharp { fixed(width: 120) { ...GatsbyImageSharpFixed } }\n    }\n    diamond_watermark: file(relativePath: { eq: \"img_watermark_diamond.png\" }) {\n      childImageSharp { fixed(width: 120) { ...GatsbyImageSharpFixed } }\n    }\n    heart_watermark: file(relativePath: { eq: \"img_watermark_heart.png\" }) {\n      childImageSharp { fixed(width: 120) { ...GatsbyImageSharpFixed } }\n    }\n    spade_watermark: file(relativePath: { eq: \"img_watermark_spade.png\" }) {\n      childImageSharp { fixed(width: 120) { ...GatsbyImageSharpFixed } }\n    }\n  }\n`\n"],"sourceRoot":""}